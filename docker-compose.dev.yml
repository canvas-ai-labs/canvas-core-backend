services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${DB_NAME:-canvas_db_dev}
      POSTGRES_USER: ${DB_USER:-canvas_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-canvas_pass}
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-canvas_user} -d ${DB_NAME:-canvas_db_dev}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_dev_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: backend.Dockerfile
    ports:
      - "8002:8002"
    environment:
      - DATABASE_URL=postgresql://${DB_USER:-canvas_user}:${DB_PASSWORD:-canvas_pass}@db:5432/${DB_NAME:-canvas_db_dev}
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    command: uvicorn backend.main:app --host 0.0.0.0 --port 8002 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  frontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./ui:/app
      - /app/node_modules
      - /app/.next
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend

volumes:
  postgres_dev_data:
  redis_dev_data: